<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
	'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='kimgibeom.dog.user.dao.map.UserMap'>
	<insert id='addUser' parameterType="user">
		insert into users
		values(#{userId},#{userPw},#{userName},#{userPhone},#{userEmail},sysdate)
	</insert>

	<select id='getUserList' parameterType='userPagination' resultType='user'>
		select 	user_id userId,
				password userPw,
				name userName,
				phone_number userPhone,
				e_mail userEmail,
				reg_date regDate
		from (
				select user_id, 
	                   password,
		               name, 
		               phone_number, 
		               e_mail, 
		               reg_date,
		               ROW_NUMBER() OVER(order by reg_date DESC, user_id DESC) as RNUM
		         from users
		         where 1=1
		         	<include refid='search'></include>)
		where RNUM > #{startList} and RNUM <![CDATA[ <= ]]> #{listSize} * #{page}
	</select>
	
	<select id='getUserListCnt' resultType='int'>
		SELECT COUNT(user_id)
		FROM users
		WHERE 1=1
		<include refid='search'></include>
	</select>
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 'userId'.toString()">
				AND user_id LIKE '%' || #{keyword} || '%'
			</if>
			<if test="searchType == 'userName'.toString()">
				AND name LIKE '%' || #{keyword} || '%'
			</if>
		</if>
	</sql>
	
	<select id='getUsers' resultType='user'>
		select 	user_id userId, password userPw, name userName, phone_number userPhone,
				e_mail userEmail, reg_date regDate
		from users
	</select>
	
	<select id='getuserPw' resultType='String' parameterType="String">
		select password from users
		where user_id=#{userId}
	</select>
	
	<select id='getUserId' resultType='user'>
		select user_id userId, reg_date regDate
		from users
		where name= #{userName} and phone_number= #{userPhone}
	</select>
	
	<select id='getUserMail' parameterType='string' resultType='user'>
		select e_mail userEmail
		from users
		where user_id = #{userId}
	</select>
	
	<update id='updatePw'>
		update users
		set password = #{userPw}
		where user_id= #{userId}
	</update>
	
	<delete id='delUser' parameterType='String'>
		delete users
		where user_id = #{userId}
	</delete>
		
	<!-- user 1ëª… -->
	<select id='getUser' resultType='user'>
		select user_id userId, password userPw, name userName, phone_number userPhone, e_mail userEmail
		from users
		where user_id = #{userId}
	</select>
	
	<update id='updateUser' parameterType="user" >
		update users
		set password = #{userPw}, name = #{userName}, phone_number = #{userPhone}, e_mail = #{userEmail}
		where user_id= #{userId}
	</update>
</mapper>